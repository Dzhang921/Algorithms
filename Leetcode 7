class Solution:
    def reverse(self, x: int) -> int:
        # If the original number is out of range, then return 0
        if x< -2**31 or x>(2**31)-1:
            return 0
        else:
            # Handle the zero situation
            if x== 0:
                return x
            # For positive number assign a sign & get the length of number
            if x >0:
                bit = len(str(x))
                sign =1
            # For negative number assign a negative sign and get the length of number
            else:
                bit = len(str(x))-1
                sign = -1
                # switch to postive number for next step
                x= -x
            
            # Initialize the result
            result = 0
            while bit > 0:
                # Get the last digit
                remain = x%10
                # Get all the remaining digit
                x = int(x/10)
                # Construct the result
                result += remain * (10**(bit-1)) 
                # Minus the bit
                bit -= 1

            # Check if the final result is out of range
            if int(result * sign) < -2**31 or int(result * sign) >(2**31)-1:
                return 0
            else:
                return int(result * sign)